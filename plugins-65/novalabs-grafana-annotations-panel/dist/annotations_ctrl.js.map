{"version":3,"sources":["../src/annotations_ctrl.js"],"names":["config","PanelCtrl","angular","annotationDefaults","timestamp","title","tags","text","editorDefaults","measurement","tagsColumn","textColumn","titleColumn","AnnotationsCtrl","$scope","$injector","$http","datasourceSrv","backendSrv","alertSrv","_","defaults","panel","events","on","onInitEditMode","bind","onPanelTeardown","get","then","result","availableDatasources","filter","selectedDatasource","annotation","editor","query","buildQuery","console","log","writeData","getNow","replace","error","name","ds","url","urls","database","method","data","headers","rsp","set","err","status","Date","getTime","addEditorTab","$timeout","cancel","nextTickPromise","templateUrl"],"mappings":"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","file":"annotations_ctrl.js","sourcesContent":["import config from 'app/core/config';\nimport {PanelCtrl} from 'app/plugins/sdk';\nimport './css/annotations-panel.css!';\nimport angular from 'angular';\n\n\nconst annotationDefaults = {\n    timestamp: \"\",\n    title: \"\",\n    tags: \"\",\n    text: \"\",\n};\n\n\nconst editorDefaults = {\n    measurement: \"events\",\n    tagsColumn: \"tags\",\n    textColumn: \"text\",\n    titleColumn: \"title\",\n}\n\n\nexport class AnnotationsCtrl extends PanelCtrl {\n\n    constructor($scope, $injector, $http, datasourceSrv, backendSrv, alertSrv) {\n        super($scope, $injector);\n        _.defaults(this.panel, annotationDefaults, editorDefaults);\n\n        this.events.on('init-edit-mode', this.onInitEditMode.bind(this));\n        this.events.on('panel-teardown', this.onPanelTeardown.bind(this));\n\n        this.alertSrv = alertSrv;\n        this.backendSrv = backendSrv;\n        this.datasourceSrv = datasourceSrv;\n        this.$http = $http;\n\n        // get influx datasources\n        this.backendSrv.get('/api/datasources')\n            .then((result) => {\n                this.availableDatasources = _.filter(result, {\"type\": \"influxdb\"});\n                this.selectedDatasource = this.availableDatasources[1];\n            });\n\n        this.annotation = annotationDefaults;\n        this.editor = editorDefaults;\n\n    }\n\n    onSubmit() {\n        var query = this.buildQuery();\n        console.log(\"query: \"+query);\n        this.writeData(query);\n    }\n\n    buildQuery() {\n        // timestamp\n        var timestamp = this.annotation.timestamp;\n        if(timestamp == \"\") {\n            timestamp = this.getNow();\n        }\n        // tags\n        var tags = this.annotation.tags.replace(/,/g, \"\\\\,\");\n\n        return \"\" + this.editor.measurement + \",\" + this.editor.tagsColumn + \"=\" + tags + \" \" + this.editor.titleColumn + \"=\\\"\" + this.annotation.title + \"\\\",\" + this.editor.textColumn + \"=\\\"\" + this.annotation.text + \"\\\" \" + timestamp;\n    }\n\n    writeData(query) {\n        console.log( \"WRITE\", query );\n        this.error = null;\n        return this.datasourceSrv.get(this.selectedDatasource.name).then( (ds) => {\n            this.$http({\n                url: ds.urls[0] + '/write?db=' + ds.database,\n                method: 'POST',\n                data: query,\n                headers: {\n                    \"Content-Type\": \"plain/text\"\n                }\n            }).then((rsp) => {\n                console.log( \"Annotation saved\", rsp );\n                this.alertSrv.set('Saved', 'Successfully saved the annotation', 'success', 3000);\n            }, err => {\n                console.log( \"ERROR\", err );\n                this.error = err.data.error + \" [\"+err.status+\"]\";\n                this.alertSrv.set('Oops', 'Something went wrong: '+this.error, 'error', 6000);\n            });\n        });\n    }\n\n    setNow() {\n        this.annotation.timestamp = this.getNow();\n    }\n\n    getNow() {\n        return new Date().getTime()*1000000;\n    }\n\n    onInitEditMode() {\n        this.addEditorTab('Annotations Options', 'public/plugins/novalabs-annotations-panel/editor.html', 2);\n    }\n\n    onPanelTeardown() {\n        this.$timeout.cancel(this.nextTickPromise);\n    }\n}\n\nAnnotationsCtrl.templateUrl = 'module.html';\n"]}